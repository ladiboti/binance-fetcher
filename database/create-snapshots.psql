CREATE TABLE currency_snapshots (
    id SERIAL PRIMARY KEY,
    snapshot_time TIMESTAMPTZ NOT NULL,
    snapshot_data JSONB NOT NULL
);


CREATE INDEX idx_currency_snapshots_time ON currency_snapshots (snapshot_time);


CREATE OR REPLACE FUNCTION create_currency_snapshot()
RETURNS INTEGER AS $$
DECLARE
    snapshot_id INTEGER;
BEGIN
    INSERT INTO currency_snapshots (snapshot_time, snapshot_data)
    SELECT 
        CURRENT_TIMESTAMP,
        jsonb_agg(
            jsonb_build_object(
                'id', id,
                'symbol', symbol,
                'name', name,
                'cluster_id', cluster_id
            )
        )
    FROM currencies
    RETURNING id INTO snapshot_id;
    
    RAISE NOTICE 'Created snapshot with ID: %', snapshot_id;
    RETURN snapshot_id;
END;
$$ LANGUAGE plpgsql;


CREATE OR REPLACE FUNCTION trigger_currency_snapshot()
RETURNS TRIGGER AS $$
BEGIN
    -- Csak akkor készítünk snapshotot, ha a cluster_id változott
    IF NEW.cluster_id <> OLD.cluster_id THEN
        PERFORM create_currency_snapshot();
    END IF;
    
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER currency_snapshot_trigger
AFTER UPDATE OF cluster_id ON currencies
FOR EACH ROW
EXECUTE FUNCTION trigger_currency_snapshot();